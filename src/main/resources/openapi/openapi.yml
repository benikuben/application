openapi: "3.0.0"
info:
  version: 1.0.0
  title: Deal API
servers:
  - url: https://localhost:8080
    description: localhost
paths:
  /application:
    post:
      summary: Calculation of loan terms
      operationId: createApplication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationRequestDTO'
      responses:
        '200':
          description: Application created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offers'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /application/offer:
    put:
      summary: Choosing one of the offers
      operationId: applyOffer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanOfferDTO'
      responses:
        '200':
          description: Offer applied
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
components:
  schemas:
    LoanApplicationRequestDTO:
      description: Loan application request
      type: object
      x-class-extra-annotation: "@lombok.AllArgsConstructor"
      required:
        - amount
        - term
        - firstName
        - lastName
        - email
        - birthdate
        - passportSeries
        - passportNumber
      properties:
        amount:
          type: number
          format: double
          minimum: 10000.00
          description: Loan amount
          example: 10000.00
        term:
          type: integer
          minimum: 6
          description: Loan term
          example: 6
        firstName:
          type: string
          pattern: '^[A-Za-z]{2,30}$'
          x-pattern-message: должно быть длиной от 2 до 30 латинских букв
          description: First name
          example: Ivan
        lastName:
          type: string
          pattern: '^[A-Za-z]{2,30}$'
          x-pattern-message: должно быть длиной от 2 до 30 латинских букв
          description: Last name
          example: Ivanov
        middleName:
          type: string
          pattern: '^[A-Za-z]{2,30}$'
          x-pattern-message: должно быть длиной от 2 до 30 латинских букв
          description: Middle name
          example: Ivanovich
        email:
          type: string
          pattern: '^[\w.]{2,50}@[\w.]{2,20}$'
          x-pattern-message: должен быть введен корректный email
          description: Email
          example: ivan@mail.ru
        birthdate:
          type: date
          format: yyyy-mm-dd
          x-field-extra-annotation: "@ru.neoflex.application.util.validators.OverEighteenYearsOld 
          @com.fasterxml.jackson.databind.annotation.JsonSerialize(using = com.fasterxml.jackson.datatype.jsr310.ser.LocalDateSerializer.class) 
          @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using = com.fasterxml.jackson.datatype.jsr310.deser.LocalDateDeserializer.class)"
          example: 2000-01-01
        passportSeries:
          type: string
          pattern: '^[0-9]{4}$'
          x-pattern-message: должно содержать 4 цифры
          description: Passport series
          example: 1234
        passportNumber:
          type: string
          pattern: '^[0-9]{6}$'
          x-pattern-message: должно содержать 6 цифр
          description: Passport number
          example: 123456
    LoanOfferDTO:
      description: Loan offer
      type: object
      required:
        - applicationId
        - requestedAmount
        - totalAmount
        - term
        - monthlyPayment
        - rate
        - isInsuranceEnabled
        - isSalaryClient
      properties:
        applicationId:
          type: integer
          format: int64
          minimum: 1
          example: 1
          description: Id of application
        requestedAmount:
          type: number
          format: double
          minimum: 10000.00
          description: Requested loan amount
          example: 10000.00
        totalAmount:
          type: number
          format: double
          minimum: 10000.00
          description: Total loan amount
          example: 10150.00
        term:
          type: integer
          minimum: 6
          description: Loan term
          example: 6
        monthlyPayment:
          type: number
          format: double
          description: Monthly payment
          example: 1756.38
        rate:
          type: number
          format: double
          description: Rate
          example: 13
        isInsuranceEnabled:
          type: boolean
          description: Is insurance enabled
          example: true
        isSalaryClient:
          type: boolean
          description: Is salary client
          example: true
    Offers:
      description: Four offers
      type: array
      maxItems: 4
      items:
        $ref: '#/components/schemas/LoanOfferDTO'
    Errors:
      description: Errors
      type: array
      items:
        $ref: '#/components/schemas/ErrorResponse'
    ErrorResponse:
      description: Error
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Message
          example: amount must not be null